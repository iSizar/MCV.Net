//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarteDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBiblio")]
    public partial class CarteDTO : object
    {
        
        private System.Nullable<int> AutorIdField;
        
        private int CarteIdField;
        
        private System.Nullable<int> GenIdField;
        
        private string TitluField;
        
        private ServiceReference1.AutorDTO autorField;
        
        private ServiceReference1.GenDTO genField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AutorId
        {
            get
            {
                return this.AutorIdField;
            }
            set
            {
                this.AutorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarteId
        {
            get
            {
                return this.CarteIdField;
            }
            set
            {
                this.CarteIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GenId
        {
            get
            {
                return this.GenIdField;
            }
            set
            {
                this.GenIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titlu
        {
            get
            {
                return this.TitluField;
            }
            set
            {
                this.TitluField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.AutorDTO autor
        {
            get
            {
                return this.autorField;
            }
            set
            {
                this.autorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.GenDTO gen
        {
            get
            {
                return this.genField;
            }
            set
            {
                this.genField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutorDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBiblio")]
    public partial class AutorDTO : object
    {
        
        private int AutorIdField;
        
        private string NumeField;
        
        private string PrenumeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutorId
        {
            get
            {
                return this.AutorIdField;
            }
            set
            {
                this.AutorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nume
        {
            get
            {
                return this.NumeField;
            }
            set
            {
                this.NumeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenume
        {
            get
            {
                return this.PrenumeField;
            }
            set
            {
                this.PrenumeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBiblio")]
    public partial class GenDTO : object
    {
        
        private string DescriereField;
        
        private int GenIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descriere
        {
            get
            {
                return this.DescriereField;
            }
            set
            {
                this.DescriereField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenId
        {
            get
            {
                return this.GenIdField;
            }
            set
            {
                this.GenIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CititorDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBiblio")]
    public partial class CititorDTO : object
    {
        
        private string AdresaField;
        
        private int CititorIdField;
        
        private string EmailField;
        
        private string NumeField;
        
        private string PrenumeField;
        
        private byte[] StareField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresa
        {
            get
            {
                return this.AdresaField;
            }
            set
            {
                this.AdresaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CititorId
        {
            get
            {
                return this.CititorIdField;
            }
            set
            {
                this.CititorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nume
        {
            get
            {
                return this.NumeField;
            }
            set
            {
                this.NumeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenume
        {
            get
            {
                return this.PrenumeField;
            }
            set
            {
                this.PrenumeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Stare
        {
            get
            {
                return this.StareField;
            }
            set
            {
                this.StareField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImprumutDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBiblio")]
    public partial class ImprumutDTO : object
    {
        
        private System.Nullable<System.DateTime> DataImprumutField;
        
        private System.Nullable<System.DateTime> DataRestituireField;
        
        private System.Nullable<System.DateTime> DataScadentaField;
        
        private int ImprumutIdField;
        
        private ServiceReference1.CarteDTO carteField;
        
        private ServiceReference1.CititorDTO cititorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataImprumut
        {
            get
            {
                return this.DataImprumutField;
            }
            set
            {
                this.DataImprumutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataRestituire
        {
            get
            {
                return this.DataRestituireField;
            }
            set
            {
                this.DataRestituireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataScadenta
        {
            get
            {
                return this.DataScadentaField;
            }
            set
            {
                this.DataScadentaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImprumutId
        {
            get
            {
                return this.ImprumutIdField;
            }
            set
            {
                this.ImprumutIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.CarteDTO carte
        {
            get
            {
                return this.carteField;
            }
            set
            {
                this.carteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.CititorDTO cititor
        {
            get
            {
                return this.cititorField;
            }
            set
            {
                this.cititorField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReviewDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBiblio")]
    public partial class ReviewDTO : object
    {
        
        private System.Nullable<int> ImprumutIdField;
        
        private int ReviewIdField;
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ImprumutId
        {
            get
            {
                return this.ImprumutIdField;
            }
            set
            {
                this.ImprumutIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReviewId
        {
            get
            {
                return this.ReviewIdField;
            }
            set
            {
                this.ReviewIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/achizitioneazaCarte", ReplyAction="http://tempuri.org/IService1/achizitioneazaCarteResponse")]
        System.Threading.Tasks.Task<bool> achizitioneazaCarteAsync(ServiceReference1.CarteDTO carte, int nr_carti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGENDTO", ReplyAction="http://tempuri.org/IService1/getGENDTOResponse")]
        System.Threading.Tasks.Task<ServiceReference1.GenDTO> getGENDTOAsync(string descriere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAutorDTO", ReplyAction="http://tempuri.org/IService1/getAutorDTOResponse")]
        System.Threading.Tasks.Task<ServiceReference1.AutorDTO> getAutorDTOAsync(string nume, string prenume);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCarteDTO", ReplyAction="http://tempuri.org/IService1/getCarteDTOResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CarteDTO> getCarteDTOAsync(string titlu, ServiceReference1.AutorDTO autor, ServiceReference1.GenDTO gen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCititorDTO", ReplyAction="http://tempuri.org/IService1/getCititorDTOResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CititorDTO> getCititorDTOAsync(string nume, string prenume, string email, string adresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getImprumutDTO", ReplyAction="http://tempuri.org/IService1/getImprumutDTOResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ImprumutDTO> getImprumutDTOAsync(System.DateTime dataRes, System.DateTime dataImp, ServiceReference1.CarteDTO c, ServiceReference1.CititorDTO cit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getReviewDTO", ReplyAction="http://tempuri.org/IService1/getReviewDTOResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ReviewDTO> getReviewDTOAsync(string test);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/adaugaCititor", ReplyAction="http://tempuri.org/IService1/adaugaCititorResponse")]
        System.Threading.Tasks.Task<bool> adaugaCititorAsync(ServiceReference1.CititorDTO cit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verfStare", ReplyAction="http://tempuri.org/IService1/verfStareResponse")]
        System.Threading.Tasks.Task<bool> verfStareAsync(ServiceReference1.CititorDTO cit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verificaDisponibila", ReplyAction="http://tempuri.org/IService1/verificaDisponibilaResponse")]
        System.Threading.Tasks.Task<bool> verificaDisponibilaAsync(int carte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchDataScadenta", ReplyAction="http://tempuri.org/IService1/searchDataScadentaResponse")]
        System.Threading.Tasks.Task<System.DateTime> searchDataScadentaAsync(ServiceReference1.CarteDTO carte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/existaCarte", ReplyAction="http://tempuri.org/IService1/existaCarteResponse")]
        System.Threading.Tasks.Task<bool> existaCarteAsync(ServiceReference1.CarteDTO c1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAcelasiGen", ReplyAction="http://tempuri.org/IService1/getAcelasiGenResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CarteDTO[]> getAcelasiGenAsync(ServiceReference1.GenDTO g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/imprumutaCarte", ReplyAction="http://tempuri.org/IService1/imprumutaCarteResponse")]
        System.Threading.Tasks.Task<bool> imprumutaCarteAsync(int c1, ServiceReference1.CititorDTO cit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchBook1", ReplyAction="http://tempuri.org/IService1/searchBook1Response")]
        System.Threading.Tasks.Task<bool> searchBook1Async(ServiceReference1.GenDTO g, string Titlu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchBook2", ReplyAction="http://tempuri.org/IService1/searchBook2Response")]
        System.Threading.Tasks.Task<bool> searchBook2Async(ServiceReference1.GenDTO g, ServiceReference1.AutorDTO a1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchBook3", ReplyAction="http://tempuri.org/IService1/searchBook3Response")]
        System.Threading.Tasks.Task<bool> searchBook3Async(ServiceReference1.GenDTO g, ServiceReference1.AutorDTO a1, string Titlu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBookId1", ReplyAction="http://tempuri.org/IService1/getBookId1Response")]
        System.Threading.Tasks.Task<int> getBookId1Async(ServiceReference1.GenDTO g, string Titlu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBookId2", ReplyAction="http://tempuri.org/IService1/getBookId2Response")]
        System.Threading.Tasks.Task<int> getBookId2Async(ServiceReference1.GenDTO g, ServiceReference1.AutorDTO a1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBookId3", ReplyAction="http://tempuri.org/IService1/getBookId3Response")]
        System.Threading.Tasks.Task<int> getBookId3Async(ServiceReference1.GenDTO g, ServiceReference1.AutorDTO a1, string Titlu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/existaCititor", ReplyAction="http://tempuri.org/IService1/existaCititorResponse")]
        System.Threading.Tasks.Task<bool> existaCititorAsync(ServiceReference1.CititorDTO cit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/existaImprumut", ReplyAction="http://tempuri.org/IService1/existaImprumutResponse")]
        System.Threading.Tasks.Task<bool> existaImprumutAsync(ServiceReference1.ImprumutDTO imp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/restituieCartea", ReplyAction="http://tempuri.org/IService1/restituieCarteaResponse")]
        System.Threading.Tasks.Task<bool> restituieCarteaAsync(int impId, string rewiew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchForCArte", ReplyAction="http://tempuri.org/IService1/searchForCArteResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CarteDTO> searchForCArteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReaderBetweenDates", ReplyAction="http://tempuri.org/IService1/ReaderBetweenDatesResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CititorDTO[]> ReaderBetweenDatesAsync(System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostWantedBooks", ReplyAction="http://tempuri.org/IService1/MostWantedBooksResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CarteDTO[]> MostWantedBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMostFaimousAutors", ReplyAction="http://tempuri.org/IService1/getMostFaimousAutorsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.AutorDTO[]> getMostFaimousAutorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMostComuneGens", ReplyAction="http://tempuri.org/IService1/getMostComuneGensResponse")]
        System.Threading.Tasks.Task<ServiceReference1.GenDTO[]> getMostComuneGensAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getReviews", ReplyAction="http://tempuri.org/IService1/getReviewsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ReviewDTO[]> getReviewsAsync(ServiceReference1.CarteDTO Carte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllBooks", ReplyAction="http://tempuri.org/IService1/getAllBooksResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CarteDTO[]> getAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllGens", ReplyAction="http://tempuri.org/IService1/getAllGensResponse")]
        System.Threading.Tasks.Task<ServiceReference1.GenDTO[]> getAllGensAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllAutors", ReplyAction="http://tempuri.org/IService1/getAllAutorsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.AutorDTO[]> getAllAutorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllImprumutsNotAlive", ReplyAction="http://tempuri.org/IService1/getAllImprumutsNotAliveResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ImprumutDTO[]> getAllImprumutsNotAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllReviews", ReplyAction="http://tempuri.org/IService1/getAllReviewsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ReviewDTO[]> getAllReviewsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllCititors", ReplyAction="http://tempuri.org/IService1/getAllCititorsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CititorDTO[]> getAllCititorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getReviewByBookID", ReplyAction="http://tempuri.org/IService1/getReviewByBookIDResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ReviewDTO[]> getReviewByBookIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/existReview", ReplyAction="http://tempuri.org/IService1/existReviewResponse")]
        System.Threading.Tasks.Task<bool> existReviewAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IService1Channel : ServiceReference1.IService1, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ServiceReference1.IService1>, ServiceReference1.IService1
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> achizitioneazaCarteAsync(ServiceReference1.CarteDTO carte, int nr_carti)
        {
            return base.Channel.achizitioneazaCarteAsync(carte, nr_carti);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GenDTO> getGENDTOAsync(string descriere)
        {
            return base.Channel.getGENDTOAsync(descriere);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.AutorDTO> getAutorDTOAsync(string nume, string prenume)
        {
            return base.Channel.getAutorDTOAsync(nume, prenume);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CarteDTO> getCarteDTOAsync(string titlu, ServiceReference1.AutorDTO autor, ServiceReference1.GenDTO gen)
        {
            return base.Channel.getCarteDTOAsync(titlu, autor, gen);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CititorDTO> getCititorDTOAsync(string nume, string prenume, string email, string adresa)
        {
            return base.Channel.getCititorDTOAsync(nume, prenume, email, adresa);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ImprumutDTO> getImprumutDTOAsync(System.DateTime dataRes, System.DateTime dataImp, ServiceReference1.CarteDTO c, ServiceReference1.CititorDTO cit)
        {
            return base.Channel.getImprumutDTOAsync(dataRes, dataImp, c, cit);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ReviewDTO> getReviewDTOAsync(string test)
        {
            return base.Channel.getReviewDTOAsync(test);
        }
        
        public System.Threading.Tasks.Task<bool> adaugaCititorAsync(ServiceReference1.CititorDTO cit)
        {
            return base.Channel.adaugaCititorAsync(cit);
        }
        
        public System.Threading.Tasks.Task<bool> verfStareAsync(ServiceReference1.CititorDTO cit)
        {
            return base.Channel.verfStareAsync(cit);
        }
        
        public System.Threading.Tasks.Task<bool> verificaDisponibilaAsync(int carte)
        {
            return base.Channel.verificaDisponibilaAsync(carte);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> searchDataScadentaAsync(ServiceReference1.CarteDTO carte)
        {
            return base.Channel.searchDataScadentaAsync(carte);
        }
        
        public System.Threading.Tasks.Task<bool> existaCarteAsync(ServiceReference1.CarteDTO c1)
        {
            return base.Channel.existaCarteAsync(c1);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CarteDTO[]> getAcelasiGenAsync(ServiceReference1.GenDTO g)
        {
            return base.Channel.getAcelasiGenAsync(g);
        }
        
        public System.Threading.Tasks.Task<bool> imprumutaCarteAsync(int c1, ServiceReference1.CititorDTO cit)
        {
            return base.Channel.imprumutaCarteAsync(c1, cit);
        }
        
        public System.Threading.Tasks.Task<bool> searchBook1Async(ServiceReference1.GenDTO g, string Titlu)
        {
            return base.Channel.searchBook1Async(g, Titlu);
        }
        
        public System.Threading.Tasks.Task<bool> searchBook2Async(ServiceReference1.GenDTO g, ServiceReference1.AutorDTO a1)
        {
            return base.Channel.searchBook2Async(g, a1);
        }
        
        public System.Threading.Tasks.Task<bool> searchBook3Async(ServiceReference1.GenDTO g, ServiceReference1.AutorDTO a1, string Titlu)
        {
            return base.Channel.searchBook3Async(g, a1, Titlu);
        }
        
        public System.Threading.Tasks.Task<int> getBookId1Async(ServiceReference1.GenDTO g, string Titlu)
        {
            return base.Channel.getBookId1Async(g, Titlu);
        }
        
        public System.Threading.Tasks.Task<int> getBookId2Async(ServiceReference1.GenDTO g, ServiceReference1.AutorDTO a1)
        {
            return base.Channel.getBookId2Async(g, a1);
        }
        
        public System.Threading.Tasks.Task<int> getBookId3Async(ServiceReference1.GenDTO g, ServiceReference1.AutorDTO a1, string Titlu)
        {
            return base.Channel.getBookId3Async(g, a1, Titlu);
        }
        
        public System.Threading.Tasks.Task<bool> existaCititorAsync(ServiceReference1.CititorDTO cit)
        {
            return base.Channel.existaCititorAsync(cit);
        }
        
        public System.Threading.Tasks.Task<bool> existaImprumutAsync(ServiceReference1.ImprumutDTO imp)
        {
            return base.Channel.existaImprumutAsync(imp);
        }
        
        public System.Threading.Tasks.Task<bool> restituieCarteaAsync(int impId, string rewiew)
        {
            return base.Channel.restituieCarteaAsync(impId, rewiew);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CarteDTO> searchForCArteAsync(int id)
        {
            return base.Channel.searchForCArteAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CititorDTO[]> ReaderBetweenDatesAsync(System.DateTime d1, System.DateTime d2)
        {
            return base.Channel.ReaderBetweenDatesAsync(d1, d2);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CarteDTO[]> MostWantedBooksAsync()
        {
            return base.Channel.MostWantedBooksAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.AutorDTO[]> getMostFaimousAutorsAsync()
        {
            return base.Channel.getMostFaimousAutorsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GenDTO[]> getMostComuneGensAsync()
        {
            return base.Channel.getMostComuneGensAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ReviewDTO[]> getReviewsAsync(ServiceReference1.CarteDTO Carte)
        {
            return base.Channel.getReviewsAsync(Carte);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CarteDTO[]> getAllBooksAsync()
        {
            return base.Channel.getAllBooksAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GenDTO[]> getAllGensAsync()
        {
            return base.Channel.getAllGensAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.AutorDTO[]> getAllAutorsAsync()
        {
            return base.Channel.getAllAutorsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ImprumutDTO[]> getAllImprumutsNotAliveAsync()
        {
            return base.Channel.getAllImprumutsNotAliveAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ReviewDTO[]> getAllReviewsAsync()
        {
            return base.Channel.getAllReviewsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CititorDTO[]> getAllCititorsAsync()
        {
            return base.Channel.getAllCititorsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ReviewDTO[]> getReviewByBookIDAsync(int id)
        {
            return base.Channel.getReviewByBookIDAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> existReviewAsync(int id)
        {
            return base.Channel.existReviewAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/WcfServiceBiblio/Service1/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService1,
        }
    }
}
